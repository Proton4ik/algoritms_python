"""
Задание 3.
Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему
Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.
Задание творческое. Здесь нет жестких требований к выполнению.
"""

all_companies = {"c1" : 5000, "c2" : 1000, "c3" : 1000000, "c4" : 37000, "c5" : 14000 }

# O(n), то лучше из-за сложности
def first_cal(com_in):
    good_com = {}
    for i in range(3):
        best = max(com_in.items(), key = lambda k_v: k_v[1])
        del com_in[best[0]]
        good_com[best[0]] = best[1]
    return good_com

print (first_cal(all_companies))

all_companies = {"c1" : 5000, "c2" : 1000, "c3" : 1000000, "c4" : 37000, "c5" : 14000 }
i = 0
# O(n log n)
def sec_cal(com_in):
    good_com_2 = {}
    it_lst = list(com_in.items())
    it_lst.sort(key = lambda x: x[1], reverse=True)
    for i in range(3):
        good_com_2.update({it_lst[i][0]: it_lst[i][1]})
    return good_com_2
print(sec_cal(all_companies))

